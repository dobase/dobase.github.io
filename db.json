{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/docs/CNAME","path":"docs/CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/avatar.png","path":"uploads/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/favicon.ico","path":"uploads/favicon.ico","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"eb041dcfe1ffb651b12607624b9a74ff3253d0c9","modified":1599123900602},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1599123900681},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1599123900682},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1599123900683},{"_id":"themes/next/.gitignore","hash":"de5b9b9e5b313b4a86e805b02f334d35c87bfe56","modified":1599123900685},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1599123900685},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1599123900686},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1599123900686},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1599123900687},{"_id":"themes/next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1599123900688},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1599123900688},{"_id":"themes/next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1599123900689},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1599123900689},{"_id":"themes/next/_config.yml","hash":"2e05f137b811623b6b34fc421b320bd27b1ed8e8","modified":1599126700581},{"_id":"themes/next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1599123900691},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1599123900691},{"_id":"themes/next/package.json","hash":"a5c189d4c4e946e936d3b5e29e2d81ddaf03ff96","modified":1599123900754},{"_id":"source/docs/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1599124519035},{"_id":"source/_posts/hexointro.md","hash":"8cf9a4b3d8271af3dcc184f07659db509cc2d2cc","modified":1599123900603},{"_id":"source/_posts/pptintro.md","hash":"3ee17d62248ca27c6cdfa266afad67c53d13b4c8","modified":1599123900604},{"_id":"source/_posts/springbootstarter.md","hash":"5ce9d29cf3c71ce537f5978b7d5f3227e5132a92","modified":1599123900604},{"_id":"source/_posts/springsecurity.md","hash":"db7e419d54ea2cdd4b9e2052a9baf4a9b92dbf16","modified":1599123900605},{"_id":"source/about/index.md","hash":"5a95cfcbed83748336807b8e24648cbdb26b5570","modified":1599123900606},{"_id":"source/categories/index.md","hash":"b0662f39f2054e13e4dca1c471acb4d164bdbddf","modified":1599123900607},{"_id":"source/tags/index.md","hash":"df70ebc2aec10a3e3206eef7521da936e7da69da","modified":1599123900609},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1599123900683},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"4de856de657a27f340f245eb491a1f52ceba1735","modified":1599123900684},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1599123900692},{"_id":"themes/next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1599123900694},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1599123900693},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1599123900694},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1599123900695},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1599123900695},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1599123900697},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1599123900697},{"_id":"themes/next/languages/ru.yml","hash":"7e19ee6f8c764a68b0b25a139ca3dc17b68d382e","modified":1599123900699},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1599123900698},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3111ce4cc5f30868b3628f9f805d2aef3b75d1c1","modified":1599123900699},{"_id":"themes/next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1599123900700},{"_id":"themes/next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1599123900700},{"_id":"themes/next/layout/_layout.swig","hash":"2e549d55788472b19dae54c14322fead3e5ebb5c","modified":1599123900703},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1599123900750},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1599123900750},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1599123900751},{"_id":"themes/next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1599123900751},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1599123900752},{"_id":"themes/next/layout/schedule.swig","hash":"459cd6d9887b7a2ebda9ba3a5585a718904adb02","modified":1599123900753},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1599123900753},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1599123900755},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1599123900756},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1599123900924},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1599123900924},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1599123900925},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1599123900838},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1599123900702},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1599123900702},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"396feef13c2f0a2241d70b28a304e6583d3d32f8","modified":1599123900704},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"6d40652784585d263c37b8a3723e43e04b926ca7","modified":1599123900705},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"506feb56e9b1091187d2014742f63a17758df933","modified":1599123900705},{"_id":"themes/next/layout/_macro/post.swig","hash":"8239a12120f6414d9c56c37b2f2b561d4cb4e705","modified":1599123900706},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1599123900707},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"e7f58154ac734088372888742e0029ce7c690511","modified":1599123900708},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1599123900708},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5258c03149aa18e9abfeb8de10e435a406d9c924","modified":1599123900709},{"_id":"themes/next/layout/_partials/footer.swig","hash":"6a457da32b84e8194979474ddfac1c295a54bb01","modified":1599123900710},{"_id":"themes/next/layout/_partials/head.swig","hash":"376adb0c482242ef8bcad31b93b99cc5c35e92fa","modified":1599123900710},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1599123900713},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1599123900714},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1599123900715},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1599123900715},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1599123900721},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1599123900722},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"bd174c8ad620da37616cad735503fc847240a3e7","modified":1599123900726},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1599123900740},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1599123900741},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1599123900742},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1599123900743},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1599123900757},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1599123900758},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1599123900758},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1599123900759},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1599123900760},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1599123900760},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1599123900837},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1599123900839},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1599123900840},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1599123900841},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1599123900841},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1599123900842},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1599123900843},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1599123900844},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1599123900844},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1599123900845},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1599123900846},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1599123900846},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1599123900847},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1599123900847},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1599123900848},{"_id":"themes/next/source/uploads/avatar.png","hash":"6c4287308c3a43d437a999d57ec11760dcf85750","modified":1599123900922},{"_id":"themes/next/source/uploads/favicon.ico","hash":"d04025625d073c49f07f8d445474badad98e4df1","modified":1599123900923},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1599123900724},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1599123900725},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1599123900814},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1599123900814},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1599123900816},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1599123900834},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1599123900836},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1599123900711},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1599123900712},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b6e4754498b5eeb470e11fd596227552d9070605","modified":1599123900716},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1599123900717},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1599123900717},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1599123900718},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1599123900719},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1599123900720},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1599123900720},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1599123900723},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1599123900725},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1599123900727},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1599123900728},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1599123900729},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1599123900729},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1599123900730},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1599123900731},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1599123900731},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1599123900732},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1599123900733},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"e9a0590dafde1046356620dd2b81e83b6b3b0936","modified":1599123900733},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1599123900734},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1599123900735},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1599123900736},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1599123900737},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1599123900737},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1599123900738},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"0399bbdc524ba50930cb6f8e2d5628ff682fc612","modified":1599123900738},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5830a52c2a555d3a1f19b67d7bf3d072376cdea9","modified":1599123900739},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1599123900740},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1599123900746},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"4a10634dba16ddf2a3cbd4908dfbc97e9aa45469","modified":1599123900747},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1599123900747},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1599123900749},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1599123900813},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1599123900815},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1599123900815},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1599123900834},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1599123900835},{"_id":"themes/next/source/css/_variables/base.styl","hash":"5b336489316d5efea069fe8bcea4479b53ec7545","modified":1599123900836},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1599123900850},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1599123900850},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1599123900851},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1599123900851},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1599123900852},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1599123900853},{"_id":"themes/next/source/js/src/post-details.js","hash":"bfaf52b69aad96566aa21b785973441a2555b4ba","modified":1599123900854},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1599123900855},{"_id":"themes/next/source/js/src/utils.js","hash":"988f29f78e68fa184c4412b722f5895fa78a4783","modified":1599123900856},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1599123900858},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1599123900863},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1599123900877},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1599123900878},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1599123900879},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1599123900879},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1599123900882},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1599123900883},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1599123900884},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1599123900885},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1599123900885},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1599123900900},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1599123900903},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1599123900904},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1599123900904},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1599123900905},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1599123900906},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1599123900906},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"b070490e0588c4625e84bcd4f847dc6275a97a81","modified":1599123900908},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1599123900915},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1599123900916},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1599123900919},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1599123900920},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1599123900921},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1599123900901},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1599123900744},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1599123900745},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4ba6f2a615693b9b5afc266d9c833697016085fd","modified":1599123900763},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"1dc2ed435e41ca041f43bd9633d5d95139afbb42","modified":1599123900764},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1599123900764},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1599123900765},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1599123900765},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1599123900778},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1599123900796},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2a9f4456f1fee1095e635379d8bccdc1b21ac3a7","modified":1599123900808},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1599123900809},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1599123900810},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1599123900810},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1599123900811},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1599123900812},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1599123900818},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1599123900818},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1599123900819},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1599123900819},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1599123900820},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1599123900821},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1599123900822},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1599123900825},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1599123900826},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1599123900826},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1599123900827},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1599123900827},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1599123900830},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"dd763e86a3bfd9820e49cffce0d9c593489af9d4","modified":1599123900830},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1599123900831},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1599123900832},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1599123900832},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1599123900833},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1599123900855},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1599123900865},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1599123900865},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1599123900866},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1599123900867},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1599123900867},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1599123900868},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1599123900874},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1599123900875},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1599123900876},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1599123900881},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1599123900881},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1599123900887},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1599123900887},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1599123900888},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1599123900913},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1599123900914},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1599123900897},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1599123900899},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1599123900918},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1599123900767},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1599123900768},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1599123900769},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1599123900769},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1599123900770},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1599123900771},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1599123900772},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"d406a09af606be82f716c15e4ad597b7fdcf0728","modified":1599123900772},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1599123900773},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1599123900774},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1599123900776},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1599123900776},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1599123900777},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1599123900778},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1599123900779},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1599123900780},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1599123900781},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1599123900782},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1599123900782},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1599123900783},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"61ec8a8481e8b76f2943235256c6d4f89c751c1c","modified":1599123900784},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1599123900785},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1599123900785},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1599123900786},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1599123900786},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1599123900787},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8a86f1a91edb3f0a19f866dfce4f02296a0137bf","modified":1599123900788},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"f9e2918205a7f03009403430f7535db7449c327b","modified":1599123900790},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1599123900789},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1599123900790},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1599123900791},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1599123900792},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1599123900793},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c9f76d4f6806ef70fa2160c97afa0a0e0ae5373e","modified":1599123900794},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1599123900795},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1599123900795},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1599123900797},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1599123900798},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1599123900798},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1599123900799},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1599123900800},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"e3ad37f2da35e330616a044621ffa50565a20c88","modified":1599123900800},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1599123900801},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1599123900802},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1599123900804},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1599123900803},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1599123900804},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"dc944a01dd59f5ed2d44bb22fdb21fc3f455948f","modified":1599123900807},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1599123900805},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"6516b70ee9e44f1cf9443412cc31bcccb6cdb684","modified":1599123900806},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1599123900823},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1599123900824},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1599123900829},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1599123900870},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1599123900870},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1599123900871},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1599123900872},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1599123900872},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1599123900874},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1599123900896},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1599123900890},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1599123900893},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1599123900862},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1599123900912},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1599123900895},{"_id":"public/about/index.html","hash":"84ab131b3da2f2a3d3ff64e599ad6f8f8f23f989","modified":1599126712857},{"_id":"public/404.html","hash":"2e6913a666278846745bcea06ce931fe1da3a4ce","modified":1599126712853},{"_id":"public/categories/index.html","hash":"d3ba6bdf9fcbe6fdc18d738bbc69f400065ac84c","modified":1599126712857},{"_id":"public/tags/index.html","hash":"344eb586a722894ef9769425141edeaad53abe67","modified":1599126712857},{"_id":"public/2017/07/01/pptintro/index.html","hash":"001728399ee98c3b6c09980558fcd28c61e13906","modified":1599126712859},{"_id":"public/archives/index.html","hash":"93594fdf14e40187ed1d6732f652dd50b56b6125","modified":1599126712859},{"_id":"public/archives/2017/index.html","hash":"3aba095a643aa7de4e55da7ad5c2892c2307d9ed","modified":1599126712859},{"_id":"public/archives/2017/07/index.html","hash":"281be03a2c5ef54060ab2f7bcd5c7fdfca2700bc","modified":1599126712859},{"_id":"public/categories/搭建博客/index.html","hash":"40176ad402e0397010dd67dc4d7a49563b5228f0","modified":1599126712860},{"_id":"public/categories/网页PPT/index.html","hash":"c38a4a0645938be445029e29bb410290a6e27334","modified":1599126712860},{"_id":"public/categories/Spring-Boot/index.html","hash":"86a995a5f58b1a7acdb431ab63638cbae8359adf","modified":1599126712860},{"_id":"public/tags/npm/index.html","hash":"716b0fc7c8872601d46b02983e366d6412668a63","modified":1599126712860},{"_id":"public/tags/hexo/index.html","hash":"ec9aee6f970f94de8acffb24746e23ea49b68cbc","modified":1599126712860},{"_id":"public/tags/github/index.html","hash":"19f931692061d83a07fd3cb6489a1ed9e846591b","modified":1599126712860},{"_id":"public/tags/nodeppt/index.html","hash":"3e73f82a695a76adedcfafb3575612bc4b8b85dc","modified":1599126712860},{"_id":"public/2017/07/26/springbootstarter/index.html","hash":"365d69bcdccfe6c4684128a4c700eceaba22b10b","modified":1599126712860},{"_id":"public/2017/07/20/springsecurity/index.html","hash":"bf03c4218fd3e3d38e22ff4cb0b5b6b2b865c883","modified":1599126712860},{"_id":"public/2017/07/01/hexointro/index.html","hash":"daab2415dbccd94bec7f75dfa52b9fd2575eca8b","modified":1599126712860},{"_id":"public/index.html","hash":"1f1b5b1789c31b74394bdd4d0b6b73a71003a76a","modified":1599126712860},{"_id":"public/docs/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1599126010225},{"_id":"public/tags/Spring-Boot/index.html","hash":"0653267a95c419ea579e209292a4c414c4c5d492","modified":1599126712860},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1599126010234},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1599126010234},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1599126010234},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1599126010235},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1599126010235},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1599126010235},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1599126010235},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1599126010235},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1599126010235},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1599126010235},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1599126010235},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1599126010235},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1599126010235},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1599126010235},{"_id":"public/uploads/avatar.png","hash":"6c4287308c3a43d437a999d57ec11760dcf85750","modified":1599126010235},{"_id":"public/uploads/favicon.ico","hash":"d04025625d073c49f07f8d445474badad98e4df1","modified":1599126010235},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1599126010235},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1599126010235},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1599126010235},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1599126010236},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1599126010236},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1599126010236},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1599126010236},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1599126010236},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1599126010236},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1599126010236},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1599126010853},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1599126010865},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1599126010865},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1599126010865},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1599126010865},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1599126010865},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1599126010865},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1599126010865},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1599126010865},{"_id":"public/js/src/utils.js","hash":"e13c9ccf70d593bdf3b8cc1d768f595abd610e6e","modified":1599126010865},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1599126010865},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1599126010865},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1599126010865},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1599126010865},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1599126010865},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1599126010865},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1599126010865},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1599126010866},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1599126010866},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1599126010866},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1599126010866},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1599126010866},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1599126010866},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1599126010866},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1599126010866},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1599126010866},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1599126010866},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1599126010867},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1599126010867},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1599126010867},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1599126010867},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1599126010867},{"_id":"public/css/main.css","hash":"26fe80814271f671449f3a98262369c1e7ab8e1f","modified":1599126010867},{"_id":"public/lib/three/three-waves.min.js","hash":"5b38ae00297ffc07f433c632c3dbf7bde4cdf39a","modified":1599126010867},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1599126010867},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1599126010867},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1599126010868},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1599126010868},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1599126010868},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1599126010868},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1599126010868},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1599126010868},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1599126010868},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1599126010868},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1599126010869},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1599126010869},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1599126010869},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1599126010869},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1599126010870},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1599126010947},{"_id":"source/_posts/react.md","hash":"055f4fd831a9f91fae0f674531f67566b50f68c9","modified":1599126409668},{"_id":"public/2020/09/03/react/index.html","hash":"734ce78270c691133012a185b8741f26c7cc8f61","modified":1599126712857},{"_id":"public/archives/2020/index.html","hash":"cbd03ceca5da4278cb973c421674071c2ecc4df1","modified":1599126712859},{"_id":"public/archives/2020/09/index.html","hash":"181b82837d0b9c5e8b4365dbea36eb8b509ae18e","modified":1599126712859},{"_id":"public/categories/React/index.html","hash":"4f73024d2253c5083b9710d72996f9e858fd6168","modified":1599126712860},{"_id":"public/tags/React/index.html","hash":"90823fe2aca5d660b3bd595a7bc9eb2566e84fc9","modified":1599126712860}],"Category":[{"name":"搭建博客","_id":"ckemmc5f5000380v9sn3vvy8w"},{"name":"网页PPT","_id":"ckemmc5fa000680v98tgv4kk5"},{"name":"Spring Boot","_id":"ckemmc5fc000980v9xtjw3d8z"},{"name":"React","_id":"ckemmlj9t00010cv980vvmh6i"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - arao'blog</title>\n    <meta name=\"description\" content=\"404错误，页面不存在！\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n\t<style>\n\t\t.mod_lost_child{\n\t\t\twidth: 100%;\n\t\t}\n\t\t.mod_lost_child .hd .wrong{\n\t\t\tleft: 285px;\n\t\t}\n\t\t.mod_lost_child .hd .other_info{\n\t\t\tleft: 385px;\n\t\t}\n\t</style>\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"https://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - arao'blog</title>\n    <meta name=\"description\" content=\"404错误，页面不存在！\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n\t<style>\n\t\t.mod_lost_child{\n\t\t\twidth: 100%;\n\t\t}\n\t\t.mod_lost_child .hd .wrong{\n\t\t\tleft: 285px;\n\t\t}\n\t\t.mod_lost_child .hd .other_info{\n\t\t\tleft: 385px;\n\t\t}\n\t</style>\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"https://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2020-09-03T09:05:00.602Z","updated":"2020-09-03T09:05:00.602Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"ckemmc5do000080v9oflkopvp","content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - arao'blog</title>\n    <meta name=\"description\" content=\"404错误，页面不存在！\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n\t<style>\n\t\t.mod_lost_child{\n\t\t\twidth: 100%;\n\t\t}\n\t\t.mod_lost_child .hd .wrong{\n\t\t\tleft: 285px;\n\t\t}\n\t\t.mod_lost_child .hd .other_info{\n\t\t\tleft: 385px;\n\t\t}\n\t</style>\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"https://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n    <title>404 - arao'blog</title>\n    <meta name=\"description\" content=\"404错误，页面不存在！\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n\t<style>\n\t\t.mod_lost_child{\n\t\t\twidth: 100%;\n\t\t}\n\t\t.mod_lost_child .hd .wrong{\n\t\t\tleft: 285px;\n\t\t}\n\t\t.mod_lost_child .hd .other_info{\n\t\t\tleft: 385px;\n\t\t}\n\t</style>\n</head>\n<body>\n    <script type=\"text/javascript\" src=\"https://qzonestyle.gtimg.cn/qzone_v6/lostchild/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"title":"关于","date":"2017-07-01T02:43:01.000Z","_content":"\n## 关于我\n一只学习前端的小菜鸟，欢迎分享知识。\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2017-07-01 10:43:01\n---\n\n## 关于我\n一只学习前端的小菜鸟，欢迎分享知识。\n","updated":"2020-09-03T09:05:00.606Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckemmc5j9000l80v91tll6yek","content":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>一只学习前端的小菜鸟，欢迎分享知识。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>一只学习前端的小菜鸟，欢迎分享知识。</p>\n"},{"title":"分类","date":"2017-07-01T02:42:10.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-07-01 10:42:10\ntype: categories\n---\n","updated":"2020-09-03T09:05:00.607Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckemmc5ja000m80v94ykrdgw9","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2017-07-01T02:37:23.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-07-01 10:37:23\ntype: tags\n---\n","updated":"2020-09-03T09:05:00.609Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckemmc5jd000o80v9ndplk669","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"hexo搭建个人博客","date":"2017-07-01T02:25:52.000Z","_content":"\n\n## 一、搭建流程\n1. 创建仓库，http://CrazyMilk.github.io；\n2. 创建两个分支：master 与 hexo；\n3. 设置hexo为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；\n4. 使用git clone拷贝仓库；\n``` bash\ngit clone https://username:password@github.com/CrazyMilk/CrazyMilk.github.io.git\n```\n5. 在本地 CrazyMilk.github.io 文件夹下通过Git bash依次执行npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;\n6. 修改_config.yml中的deploy参数，分支应为master；\n7. 依次执行git add .、git commit -m \"...\"、git push origin hexo提交网站相关的文件；\n8. 执行hexo g -d生成网站并部署到GitHub上。\n这样一来，在GitHub上的 http://CrazyMilk.github.io 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。\n\n\n## 二、日常改动\n在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理。\n1. 依次执行git指令将改动推送到GitHub（此时当前分支应为hexo）；\n```bash\ngit add .\ngit commit -m \"...\"\ngit push origin hexo\n```\n2. 然后才执行hexo g -d发布网站到master分支上。虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的。\n\n## 三、环境恢复\n本地资料丢失后的流程当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：\n\n1. 使用git clone拷贝仓库（默认分支为hexo）\n``` bash\ngit clone https://username:password@github.com/CrazyMilk/CrazyMilk.github.io.git\n```\n2. 在本地新拷贝的 CrazyMilk.github.io 文件夹下通过Git bash依次执行下列指令（记得，不需要hexo init这条指令）。\n``` bash\nnpm install hexo\nnpm install\nnpm install hexo-deployer-git --save\n```","source":"_posts/hexointro.md","raw":"---\ntitle: hexo搭建个人博客\ndate: 2017-07-01 10:25:52\ntags: [npm, hexo, github]\ncategories: 搭建博客\n---\n\n\n## 一、搭建流程\n1. 创建仓库，http://CrazyMilk.github.io；\n2. 创建两个分支：master 与 hexo；\n3. 设置hexo为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；\n4. 使用git clone拷贝仓库；\n``` bash\ngit clone https://username:password@github.com/CrazyMilk/CrazyMilk.github.io.git\n```\n5. 在本地 CrazyMilk.github.io 文件夹下通过Git bash依次执行npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;\n6. 修改_config.yml中的deploy参数，分支应为master；\n7. 依次执行git add .、git commit -m \"...\"、git push origin hexo提交网站相关的文件；\n8. 执行hexo g -d生成网站并部署到GitHub上。\n这样一来，在GitHub上的 http://CrazyMilk.github.io 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。\n\n\n## 二、日常改动\n在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理。\n1. 依次执行git指令将改动推送到GitHub（此时当前分支应为hexo）；\n```bash\ngit add .\ngit commit -m \"...\"\ngit push origin hexo\n```\n2. 然后才执行hexo g -d发布网站到master分支上。虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的。\n\n## 三、环境恢复\n本地资料丢失后的流程当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：\n\n1. 使用git clone拷贝仓库（默认分支为hexo）\n``` bash\ngit clone https://username:password@github.com/CrazyMilk/CrazyMilk.github.io.git\n```\n2. 在本地新拷贝的 CrazyMilk.github.io 文件夹下通过Git bash依次执行下列指令（记得，不需要hexo init这条指令）。\n``` bash\nnpm install hexo\nnpm install\nnpm install hexo-deployer-git --save\n```","slug":"hexointro","published":1,"updated":"2020-09-03T09:05:00.603Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckemmc5ez000180v97nzs6jg8","content":"<h2 id=\"一、搭建流程\"><a href=\"#一、搭建流程\" class=\"headerlink\" title=\"一、搭建流程\"></a>一、搭建流程</h2><ol>\n<li>创建仓库，<a href=\"http://CrazyMilk.github.io；\" target=\"_blank\" rel=\"external\">http://CrazyMilk.github.io；</a></li>\n<li>创建两个分支：master 与 hexo；</li>\n<li>设置hexo为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；</li>\n<li><p>使用git clone拷贝仓库；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://username:password@github.com/CrazyMilk/CrazyMilk.github.io.git</div></pre></td></tr></table></figure>\n</li>\n<li><p>在本地 CrazyMilk.github.io 文件夹下通过Git bash依次执行npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;</p>\n</li>\n<li>修改_config.yml中的deploy参数，分支应为master；</li>\n<li>依次执行git add .、git commit -m “…”、git push origin hexo提交网站相关的文件；</li>\n<li>执行hexo g -d生成网站并部署到GitHub上。<br>这样一来，在GitHub上的 <a href=\"http://CrazyMilk.github.io\" target=\"_blank\" rel=\"external\">http://CrazyMilk.github.io</a> 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。</li>\n</ol>\n<h2 id=\"二、日常改动\"><a href=\"#二、日常改动\" class=\"headerlink\" title=\"二、日常改动\"></a>二、日常改动</h2><p>在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理。</p>\n<ol>\n<li><p>依次执行git指令将改动推送到GitHub（此时当前分支应为hexo）；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"...\"</span></div><div class=\"line\">git push origin hexo</div></pre></td></tr></table></figure>\n</li>\n<li><p>然后才执行hexo g -d发布网站到master分支上。虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的。</p>\n</li>\n</ol>\n<h2 id=\"三、环境恢复\"><a href=\"#三、环境恢复\" class=\"headerlink\" title=\"三、环境恢复\"></a>三、环境恢复</h2><p>本地资料丢失后的流程当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：</p>\n<ol>\n<li><p>使用git clone拷贝仓库（默认分支为hexo）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://username:password@github.com/CrazyMilk/CrazyMilk.github.io.git</div></pre></td></tr></table></figure>\n</li>\n<li><p>在本地新拷贝的 CrazyMilk.github.io 文件夹下通过Git bash依次执行下列指令（记得，不需要hexo init这条指令）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo</div><div class=\"line\">npm install</div><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、搭建流程\"><a href=\"#一、搭建流程\" class=\"headerlink\" title=\"一、搭建流程\"></a>一、搭建流程</h2><ol>\n<li>创建仓库，<a href=\"http://CrazyMilk.github.io；\" target=\"_blank\" rel=\"external\">http://CrazyMilk.github.io；</a></li>\n<li>创建两个分支：master 与 hexo；</li>\n<li>设置hexo为默认分支（因为我们只需要手动管理这个分支上的Hexo网站文件）；</li>\n<li><p>使用git clone拷贝仓库；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://username:password@github.com/CrazyMilk/CrazyMilk.github.io.git</div></pre></td></tr></table></figure>\n</li>\n<li><p>在本地 CrazyMilk.github.io 文件夹下通过Git bash依次执行npm install hexo、hexo init、npm install 和 npm install hexo-deployer-git（此时当前分支应显示为hexo）;</p>\n</li>\n<li>修改_config.yml中的deploy参数，分支应为master；</li>\n<li>依次执行git add .、git commit -m “…”、git push origin hexo提交网站相关的文件；</li>\n<li>执行hexo g -d生成网站并部署到GitHub上。<br>这样一来，在GitHub上的 <a href=\"http://CrazyMilk.github.io\" target=\"_blank\" rel=\"external\">http://CrazyMilk.github.io</a> 仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。</li>\n</ol>\n<h2 id=\"二、日常改动\"><a href=\"#二、日常改动\" class=\"headerlink\" title=\"二、日常改动\"></a>二、日常改动</h2><p>在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理。</p>\n<ol>\n<li><p>依次执行git指令将改动推送到GitHub（此时当前分支应为hexo）；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"...\"</span></div><div class=\"line\">git push origin hexo</div></pre></td></tr></table></figure>\n</li>\n<li><p>然后才执行hexo g -d发布网站到master分支上。虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的。</p>\n</li>\n</ol>\n<h2 id=\"三、环境恢复\"><a href=\"#三、环境恢复\" class=\"headerlink\" title=\"三、环境恢复\"></a>三、环境恢复</h2><p>本地资料丢失后的流程当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：</p>\n<ol>\n<li><p>使用git clone拷贝仓库（默认分支为hexo）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://username:password@github.com/CrazyMilk/CrazyMilk.github.io.git</div></pre></td></tr></table></figure>\n</li>\n<li><p>在本地新拷贝的 CrazyMilk.github.io 文件夹下通过Git bash依次执行下列指令（记得，不需要hexo init这条指令）。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo</div><div class=\"line\">npm install</div><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"nodeppt介绍","date":"2017-07-01T02:00:00.000Z","_content":"\n<iframe frameborder=0 width=\"100%\" height=\"400px\" src=\"https://liqiumei.github.io/nodeppt/publish/pptintro.html\"></iframe>","source":"_posts/pptintro.md","raw":"---\ntitle: nodeppt介绍\ndate: 2017-07-01 10:00:00\ntags: [nodeppt]\ncategories: 网页PPT\n---\n\n<iframe frameborder=0 width=\"100%\" height=\"400px\" src=\"https://liqiumei.github.io/nodeppt/publish/pptintro.html\"></iframe>","slug":"pptintro","published":1,"updated":"2020-09-03T09:05:00.604Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckemmc5f3000280v9v6iqvj6o","content":"<iframe frameborder=\"0\" width=\"100%\" height=\"400px\" src=\"https://liqiumei.github.io/nodeppt/publish/pptintro.html\"></iframe>","site":{"data":{}},"excerpt":"","more":"<iframe frameborder=\"0\" width=\"100%\" height=\"400px\" src=\"https://liqiumei.github.io/nodeppt/publish/pptintro.html\"></iframe>"},{"title":"自定义Spring Boot Starter","date":"2017-07-26T02:00:00.000Z","_content":"\n\nSpring Boot由众多Starter组成，随着版本的推移Starter家族成员也与日俱增。在传统Maven项目中通常将一些层、组件拆分为模块来管理，以便相互依赖复用，在Spring Boot项目中我们则可以创建自定义Spring Boot Starter来达成该目的。\n\n# 创建Maven项目\n----\n\n创建Maven项目并引入依赖：\n\n```bash\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.test</groupId>\n    <artifactId>test-spring-boot-starter</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-autoconfigure</artifactId>\n        </dependency>\n    </dependencies>\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <!-- Import dependency management from Spring Boot -->\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-dependencies</artifactId>\n                <version>1.5.2.RELEASE</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n</project>\n\n```\n\nartifactId命名问题:\n- spring官方Starter通常命名为spring-boot-starter-{name}\n- Spring官方建议非官方Starter命名应遵循{name}-spring-boot-starter的格式\n\n\n# 接收properties中配置的信息\n----\n```java\nimport org.springframework.boot.context.properties.ConfigurationProperties;\n\n/**\n *接收配置文件中以test开头的message信息\n */\n@ConfigurationProperties(prefix = \"test\")  \npublic class TestServiceProperties {\n  \n  private String message;\n\n  public String getMessage() {\n    return message;\n  }\n\n  public void setMessage(String message) {\n    this.message = message;\n  }\n}\n```\n** @ConfigurationProperties：标识这个类是用来接收指定前缀为（test）的资源配置值 **\n\n# 创建Service提供服务\n----\n```java\n/**\n * 定义Service类对外提供服务（输出配置文件的信息）\n */\npublic class TestService {\n  private String message;\n\n  public String getMessage() {\n    return message;\n  }\n\n  public void setMessage(String message) {\n    this.message = message;\n  }\n  \n  public String sayMessage(){\n    return message;\n  }\n}\n```\n\n# 配置AutoConfigure\n----\n\n```java\n/**\n * 用来读取TestServiceProprties配置信息注入到TestService\n */\n@Configuration                                                                                                                              \n@EnableConfigurationProperties(value = TestServiceProperties.class)                                                                        \n@ConditionalOnClass(TestService.class)                                                                                                     \n@ConditionalOnProperty(prefix = \"test\", value = \"enable\", matchIfMissing = true)  \npublic class TestAutoConfiguration {\n\n  @Autowired                                                                                                                              \n  private TestServiceProperties testServiceProperteis;                                                                                  \n                                                                                                                                          \n  @Bean                                                                                                                                   \n  @ConditionalOnMissingBean(TestService.class)                                                                                           \n  public TestService testService() {                                                                                                    \n    TestService testService = new TestService();                                                                                     \n    testService.setMessage(testServiceProperteis.getMessage());                                                                               \n    return testService;                                                                                                                \n  }                     \n}\n```\n\n- ** @Configuration：标识此类为一个spring配置类 **\n\n- ** @EnableConfigurationProperties(value = TestServiceProperties.class):启动配置文件，value用来指定我们要启用的配置类，多个时配置类时value={xxProperties1.class,xxProperteis2.class....} **\n\n- ** @ConditionalOnClass(TestService.class):表示当classPath下存在TestService.class文件时该配置文件类才有效 **\n\n- ** @ConditionalOnProperty(prefix = \"test\", value = \"enable\", matchIfMissing = true):表示只有我们的配置文件是否配置了以test为前缀的资源项值，并且在该资源项值为enable，如果没有配置我们默认设置为enable **\n\n# 新建spring.factories\n----\n在src/main/resources 文件夹下新建文件夹 META-INF，在新建的META-INF文件夹下新建 spring.factories。\n```bash\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=com.test.TestAutoConfiguration\n```\n\n# 测试运行\n----\n\n在SpringBoot项目中引入test-spring-boot-starter依赖\n```bash\n<dependency>\n    <groupId>com.test</groupId>\n    <artifactId>test-spring-boot-starter</artifactId>\n    <version>1.0-SNAPSHOT</version>\n</dependency>\n```\n\n在application.properties进行配置\n```bash\ntest.message = test spring boot starter\n```\n\n注入Starter提供的TestService看它是否正常\n```bash\n@Autowired\nprivate TestService testService;\n\n@@RequestMapping(\"/test\")\npublic String test(){\n\treturn testService.sayMessage();\n}\n```\n\n","source":"_posts/springbootstarter.md","raw":"---\ntitle: 自定义Spring Boot Starter\ndate: 2017-07-26 10:00:00\ntags: [Spring Boot]\ncategories: Spring Boot\n---\n\n\nSpring Boot由众多Starter组成，随着版本的推移Starter家族成员也与日俱增。在传统Maven项目中通常将一些层、组件拆分为模块来管理，以便相互依赖复用，在Spring Boot项目中我们则可以创建自定义Spring Boot Starter来达成该目的。\n\n# 创建Maven项目\n----\n\n创建Maven项目并引入依赖：\n\n```bash\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.test</groupId>\n    <artifactId>test-spring-boot-starter</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-autoconfigure</artifactId>\n        </dependency>\n    </dependencies>\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <!-- Import dependency management from Spring Boot -->\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-dependencies</artifactId>\n                <version>1.5.2.RELEASE</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n</project>\n\n```\n\nartifactId命名问题:\n- spring官方Starter通常命名为spring-boot-starter-{name}\n- Spring官方建议非官方Starter命名应遵循{name}-spring-boot-starter的格式\n\n\n# 接收properties中配置的信息\n----\n```java\nimport org.springframework.boot.context.properties.ConfigurationProperties;\n\n/**\n *接收配置文件中以test开头的message信息\n */\n@ConfigurationProperties(prefix = \"test\")  \npublic class TestServiceProperties {\n  \n  private String message;\n\n  public String getMessage() {\n    return message;\n  }\n\n  public void setMessage(String message) {\n    this.message = message;\n  }\n}\n```\n** @ConfigurationProperties：标识这个类是用来接收指定前缀为（test）的资源配置值 **\n\n# 创建Service提供服务\n----\n```java\n/**\n * 定义Service类对外提供服务（输出配置文件的信息）\n */\npublic class TestService {\n  private String message;\n\n  public String getMessage() {\n    return message;\n  }\n\n  public void setMessage(String message) {\n    this.message = message;\n  }\n  \n  public String sayMessage(){\n    return message;\n  }\n}\n```\n\n# 配置AutoConfigure\n----\n\n```java\n/**\n * 用来读取TestServiceProprties配置信息注入到TestService\n */\n@Configuration                                                                                                                              \n@EnableConfigurationProperties(value = TestServiceProperties.class)                                                                        \n@ConditionalOnClass(TestService.class)                                                                                                     \n@ConditionalOnProperty(prefix = \"test\", value = \"enable\", matchIfMissing = true)  \npublic class TestAutoConfiguration {\n\n  @Autowired                                                                                                                              \n  private TestServiceProperties testServiceProperteis;                                                                                  \n                                                                                                                                          \n  @Bean                                                                                                                                   \n  @ConditionalOnMissingBean(TestService.class)                                                                                           \n  public TestService testService() {                                                                                                    \n    TestService testService = new TestService();                                                                                     \n    testService.setMessage(testServiceProperteis.getMessage());                                                                               \n    return testService;                                                                                                                \n  }                     \n}\n```\n\n- ** @Configuration：标识此类为一个spring配置类 **\n\n- ** @EnableConfigurationProperties(value = TestServiceProperties.class):启动配置文件，value用来指定我们要启用的配置类，多个时配置类时value={xxProperties1.class,xxProperteis2.class....} **\n\n- ** @ConditionalOnClass(TestService.class):表示当classPath下存在TestService.class文件时该配置文件类才有效 **\n\n- ** @ConditionalOnProperty(prefix = \"test\", value = \"enable\", matchIfMissing = true):表示只有我们的配置文件是否配置了以test为前缀的资源项值，并且在该资源项值为enable，如果没有配置我们默认设置为enable **\n\n# 新建spring.factories\n----\n在src/main/resources 文件夹下新建文件夹 META-INF，在新建的META-INF文件夹下新建 spring.factories。\n```bash\norg.springframework.boot.autoconfigure.EnableAutoConfiguration=com.test.TestAutoConfiguration\n```\n\n# 测试运行\n----\n\n在SpringBoot项目中引入test-spring-boot-starter依赖\n```bash\n<dependency>\n    <groupId>com.test</groupId>\n    <artifactId>test-spring-boot-starter</artifactId>\n    <version>1.0-SNAPSHOT</version>\n</dependency>\n```\n\n在application.properties进行配置\n```bash\ntest.message = test spring boot starter\n```\n\n注入Starter提供的TestService看它是否正常\n```bash\n@Autowired\nprivate TestService testService;\n\n@@RequestMapping(\"/test\")\npublic String test(){\n\treturn testService.sayMessage();\n}\n```\n\n","slug":"springbootstarter","published":1,"updated":"2020-09-03T09:05:00.604Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckemmc5f8000580v9w1rx8jy6","content":"<p>Spring Boot由众多Starter组成，随着版本的推移Starter家族成员也与日俱增。在传统Maven项目中通常将一些层、组件拆分为模块来管理，以便相互依赖复用，在Spring Boot项目中我们则可以创建自定义Spring Boot Starter来达成该目的。</p>\n<h1 id=\"创建Maven项目\"><a href=\"#创建Maven项目\" class=\"headerlink\" title=\"创建Maven项目\"></a>创建Maven项目</h1><hr>\n<p>创建Maven项目并引入依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span>?&gt;</div><div class=\"line\">&lt;project xmlns=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span></div><div class=\"line\">         xmlns:xsi=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">         xsi:schemaLocation=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</div><div class=\"line\">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class=\"line\">    &lt;groupId&gt;com.test&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;<span class=\"built_in\">test</span>-spring-boot-starter&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</div><div class=\"line\">    &lt;dependencies&gt;</div><div class=\"line\">        &lt;dependency&gt;</div><div class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">            &lt;artifactId&gt;spring-boot-autoconfigure&lt;/artifactId&gt;</div><div class=\"line\">        &lt;/dependency&gt;</div><div class=\"line\">    &lt;/dependencies&gt;</div><div class=\"line\">    &lt;dependencyManagement&gt;</div><div class=\"line\">        &lt;dependencies&gt;</div><div class=\"line\">            &lt;dependency&gt;</div><div class=\"line\">                &lt;!-- Import dependency management from Spring Boot --&gt;</div><div class=\"line\">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">                &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;</div><div class=\"line\">                &lt;version&gt;1.5.2.RELEASE&lt;/version&gt;</div><div class=\"line\">                &lt;<span class=\"built_in\">type</span>&gt;pom&lt;/<span class=\"built_in\">type</span>&gt;</div><div class=\"line\">                &lt;scope&gt;import&lt;/scope&gt;</div><div class=\"line\">            &lt;/dependency&gt;</div><div class=\"line\">        &lt;/dependencies&gt;</div><div class=\"line\">    &lt;/dependencyManagement&gt;</div><div class=\"line\">&lt;/project&gt;</div></pre></td></tr></table></figure>\n<p>artifactId命名问题:</p>\n<ul>\n<li>spring官方Starter通常命名为spring-boot-starter-{name}</li>\n<li>Spring官方建议非官方Starter命名应遵循{name}-spring-boot-starter的格式</li>\n</ul>\n<h1 id=\"接收properties中配置的信息\"><a href=\"#接收properties中配置的信息\" class=\"headerlink\" title=\"接收properties中配置的信息\"></a>接收properties中配置的信息</h1><hr>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> *接收配置文件中以test开头的message信息</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@ConfigurationProperties</span>(prefix = <span class=\"string\">\"test\"</span>)  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestServiceProperties</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">private</span> String message;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMessage</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> message;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMessage</span><span class=\"params\">(String message)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.message = message;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong> @ConfigurationProperties：标识这个类是用来接收指定前缀为（test）的资源配置值 </strong></p>\n<h1 id=\"创建Service提供服务\"><a href=\"#创建Service提供服务\" class=\"headerlink\" title=\"创建Service提供服务\"></a>创建Service提供服务</h1><hr>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 定义Service类对外提供服务（输出配置文件的信息）</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestService</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> String message;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMessage</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> message;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMessage</span><span class=\"params\">(String message)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.message = message;</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">sayMessage</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> message;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"配置AutoConfigure\"><a href=\"#配置AutoConfigure\" class=\"headerlink\" title=\"配置AutoConfigure\"></a>配置AutoConfigure</h1><hr>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 用来读取TestServiceProprties配置信息注入到TestService</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@Configuration</span>                                                                                                                              </div><div class=\"line\"><span class=\"meta\">@EnableConfigurationProperties</span>(value = TestServiceProperties.class)                                                                        </div><div class=\"line\"><span class=\"meta\">@ConditionalOnClass</span>(TestService.class)                                                                                                     </div><div class=\"line\"><span class=\"meta\">@ConditionalOnProperty</span>(prefix = <span class=\"string\">\"test\"</span>, value = <span class=\"string\">\"enable\"</span>, matchIfMissing = <span class=\"keyword\">true</span>)  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestAutoConfiguration</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">@Autowired</span>                                                                                                                              </div><div class=\"line\">  <span class=\"keyword\">private</span> TestServiceProperties testServiceProperteis;                                                                                  </div><div class=\"line\">                                                                                                                                          </div><div class=\"line\">  <span class=\"meta\">@Bean</span>                                                                                                                                   </div><div class=\"line\">  <span class=\"meta\">@ConditionalOnMissingBean</span>(TestService.class)                                                                                           </div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> TestService <span class=\"title\">testService</span><span class=\"params\">()</span> </span>&#123;                                                                                                    </div><div class=\"line\">    TestService testService = <span class=\"keyword\">new</span> TestService();                                                                                     </div><div class=\"line\">    testService.setMessage(testServiceProperteis.getMessage());                                                                               </div><div class=\"line\">    <span class=\"keyword\">return</span> testService;                                                                                                                </div><div class=\"line\">  &#125;                     </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li><p><strong> @Configuration：标识此类为一个spring配置类 </strong></p>\n</li>\n<li><p><strong> @EnableConfigurationProperties(value = TestServiceProperties.class):启动配置文件，value用来指定我们要启用的配置类，多个时配置类时value={xxProperties1.class,xxProperteis2.class….} </strong></p>\n</li>\n<li><p><strong> @ConditionalOnClass(TestService.class):表示当classPath下存在TestService.class文件时该配置文件类才有效 </strong></p>\n</li>\n<li><p><strong> @ConditionalOnProperty(prefix = “test”, value = “enable”, matchIfMissing = true):表示只有我们的配置文件是否配置了以test为前缀的资源项值，并且在该资源项值为enable，如果没有配置我们默认设置为enable </strong></p>\n</li>\n</ul>\n<h1 id=\"新建spring-factories\"><a href=\"#新建spring-factories\" class=\"headerlink\" title=\"新建spring.factories\"></a>新建spring.factories</h1><hr>\n<p>在src/main/resources 文件夹下新建文件夹 META-INF，在新建的META-INF文件夹下新建 spring.factories。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.springframework.boot.autoconfigure.EnableAutoConfiguration=com.test.TestAutoConfiguration</div></pre></td></tr></table></figure></p>\n<h1 id=\"测试运行\"><a href=\"#测试运行\" class=\"headerlink\" title=\"测试运行\"></a>测试运行</h1><hr>\n<p>在SpringBoot项目中引入test-spring-boot-starter依赖<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;com.test&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;<span class=\"built_in\">test</span>-spring-boot-starter&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>\n<p>在application.properties进行配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">test.message = <span class=\"built_in\">test</span> spring boot starter</div></pre></td></tr></table></figure></p>\n<p>注入Starter提供的TestService看它是否正常<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Autowired</div><div class=\"line\">private TestService testService;</div><div class=\"line\"></div><div class=\"line\">@@RequestMapping(<span class=\"string\">\"/test\"</span>)</div><div class=\"line\">public String <span class=\"function\"><span class=\"title\">test</span></span>()&#123;</div><div class=\"line\">\t<span class=\"built_in\">return</span> testService.sayMessage();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Spring Boot由众多Starter组成，随着版本的推移Starter家族成员也与日俱增。在传统Maven项目中通常将一些层、组件拆分为模块来管理，以便相互依赖复用，在Spring Boot项目中我们则可以创建自定义Spring Boot Starter来达成该目的。</p>\n<h1 id=\"创建Maven项目\"><a href=\"#创建Maven项目\" class=\"headerlink\" title=\"创建Maven项目\"></a>创建Maven项目</h1><hr>\n<p>创建Maven项目并引入依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span>?&gt;</div><div class=\"line\">&lt;project xmlns=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span></div><div class=\"line\">         xmlns:xsi=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">         xsi:schemaLocation=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</div><div class=\"line\">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class=\"line\">    &lt;groupId&gt;com.test&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;<span class=\"built_in\">test</span>-spring-boot-starter&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</div><div class=\"line\">    &lt;dependencies&gt;</div><div class=\"line\">        &lt;dependency&gt;</div><div class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">            &lt;artifactId&gt;spring-boot-autoconfigure&lt;/artifactId&gt;</div><div class=\"line\">        &lt;/dependency&gt;</div><div class=\"line\">    &lt;/dependencies&gt;</div><div class=\"line\">    &lt;dependencyManagement&gt;</div><div class=\"line\">        &lt;dependencies&gt;</div><div class=\"line\">            &lt;dependency&gt;</div><div class=\"line\">                &lt;!-- Import dependency management from Spring Boot --&gt;</div><div class=\"line\">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">                &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;</div><div class=\"line\">                &lt;version&gt;1.5.2.RELEASE&lt;/version&gt;</div><div class=\"line\">                &lt;<span class=\"built_in\">type</span>&gt;pom&lt;/<span class=\"built_in\">type</span>&gt;</div><div class=\"line\">                &lt;scope&gt;import&lt;/scope&gt;</div><div class=\"line\">            &lt;/dependency&gt;</div><div class=\"line\">        &lt;/dependencies&gt;</div><div class=\"line\">    &lt;/dependencyManagement&gt;</div><div class=\"line\">&lt;/project&gt;</div></pre></td></tr></table></figure>\n<p>artifactId命名问题:</p>\n<ul>\n<li>spring官方Starter通常命名为spring-boot-starter-{name}</li>\n<li>Spring官方建议非官方Starter命名应遵循{name}-spring-boot-starter的格式</li>\n</ul>\n<h1 id=\"接收properties中配置的信息\"><a href=\"#接收properties中配置的信息\" class=\"headerlink\" title=\"接收properties中配置的信息\"></a>接收properties中配置的信息</h1><hr>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> *接收配置文件中以test开头的message信息</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@ConfigurationProperties</span>(prefix = <span class=\"string\">\"test\"</span>)  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestServiceProperties</span> </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">private</span> String message;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMessage</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> message;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMessage</span><span class=\"params\">(String message)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.message = message;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong> @ConfigurationProperties：标识这个类是用来接收指定前缀为（test）的资源配置值 </strong></p>\n<h1 id=\"创建Service提供服务\"><a href=\"#创建Service提供服务\" class=\"headerlink\" title=\"创建Service提供服务\"></a>创建Service提供服务</h1><hr>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 定义Service类对外提供服务（输出配置文件的信息）</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestService</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">private</span> String message;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMessage</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> message;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMessage</span><span class=\"params\">(String message)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.message = message;</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">sayMessage</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> message;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"配置AutoConfigure\"><a href=\"#配置AutoConfigure\" class=\"headerlink\" title=\"配置AutoConfigure\"></a>配置AutoConfigure</h1><hr>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 用来读取TestServiceProprties配置信息注入到TestService</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@Configuration</span>                                                                                                                              </div><div class=\"line\"><span class=\"meta\">@EnableConfigurationProperties</span>(value = TestServiceProperties.class)                                                                        </div><div class=\"line\"><span class=\"meta\">@ConditionalOnClass</span>(TestService.class)                                                                                                     </div><div class=\"line\"><span class=\"meta\">@ConditionalOnProperty</span>(prefix = <span class=\"string\">\"test\"</span>, value = <span class=\"string\">\"enable\"</span>, matchIfMissing = <span class=\"keyword\">true</span>)  </div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestAutoConfiguration</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"meta\">@Autowired</span>                                                                                                                              </div><div class=\"line\">  <span class=\"keyword\">private</span> TestServiceProperties testServiceProperteis;                                                                                  </div><div class=\"line\">                                                                                                                                          </div><div class=\"line\">  <span class=\"meta\">@Bean</span>                                                                                                                                   </div><div class=\"line\">  <span class=\"meta\">@ConditionalOnMissingBean</span>(TestService.class)                                                                                           </div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> TestService <span class=\"title\">testService</span><span class=\"params\">()</span> </span>&#123;                                                                                                    </div><div class=\"line\">    TestService testService = <span class=\"keyword\">new</span> TestService();                                                                                     </div><div class=\"line\">    testService.setMessage(testServiceProperteis.getMessage());                                                                               </div><div class=\"line\">    <span class=\"keyword\">return</span> testService;                                                                                                                </div><div class=\"line\">  &#125;                     </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li><p><strong> @Configuration：标识此类为一个spring配置类 </strong></p>\n</li>\n<li><p><strong> @EnableConfigurationProperties(value = TestServiceProperties.class):启动配置文件，value用来指定我们要启用的配置类，多个时配置类时value={xxProperties1.class,xxProperteis2.class….} </strong></p>\n</li>\n<li><p><strong> @ConditionalOnClass(TestService.class):表示当classPath下存在TestService.class文件时该配置文件类才有效 </strong></p>\n</li>\n<li><p><strong> @ConditionalOnProperty(prefix = “test”, value = “enable”, matchIfMissing = true):表示只有我们的配置文件是否配置了以test为前缀的资源项值，并且在该资源项值为enable，如果没有配置我们默认设置为enable </strong></p>\n</li>\n</ul>\n<h1 id=\"新建spring-factories\"><a href=\"#新建spring-factories\" class=\"headerlink\" title=\"新建spring.factories\"></a>新建spring.factories</h1><hr>\n<p>在src/main/resources 文件夹下新建文件夹 META-INF，在新建的META-INF文件夹下新建 spring.factories。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.springframework.boot.autoconfigure.EnableAutoConfiguration=com.test.TestAutoConfiguration</div></pre></td></tr></table></figure></p>\n<h1 id=\"测试运行\"><a href=\"#测试运行\" class=\"headerlink\" title=\"测试运行\"></a>测试运行</h1><hr>\n<p>在SpringBoot项目中引入test-spring-boot-starter依赖<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;com.test&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;<span class=\"built_in\">test</span>-spring-boot-starter&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>\n<p>在application.properties进行配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">test.message = <span class=\"built_in\">test</span> spring boot starter</div></pre></td></tr></table></figure></p>\n<p>注入Starter提供的TestService看它是否正常<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Autowired</div><div class=\"line\">private TestService testService;</div><div class=\"line\"></div><div class=\"line\">@@RequestMapping(<span class=\"string\">\"/test\"</span>)</div><div class=\"line\">public String <span class=\"function\"><span class=\"title\">test</span></span>()&#123;</div><div class=\"line\">\t<span class=\"built_in\">return</span> testService.sayMessage();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"Spring Boot笔记","date":"2017-07-20T02:00:00.000Z","_content":"\n# 静态资源访问\n----\n\nSpring Boot默认提供静态资源目录位置需置于classpath下，目录名需符合如下规则：\n\n- /static\n- /public\n- /resources\n- /META-INF/resources\n\n举例：我们可以在src/main/resources/目录下创建static，在该位置放置一个图片文件。启动程序后，尝试访问http://localhost:8080/D.jpg\n\n\n# 模板引擎\n----\n\nSpring Boot提供了默认配置的模板引擎主要有以下几种：\n\n- Thymeleaf\n- FreeMarker\n- Velocity\n- Groovy\n- Mustache\n\n** 模板默认配置路径为：src/main/resources/templates **\n\n\n# Thymeleaf\n----\n\nThymeleaf是一个XML/XHTML/HTML5模板引擎，可用于Web与非Web环境中的应用开发。\n\nSpring Boot中使用Thymeleaf，只需要引入下面依赖，并在默认的模板路径src/main/resources/templates下编写模板文件即可完成。\n```bash\n<dependency>\n\t<groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\n</dependency>\n```\n\n\n示例模板：\n```bash\n<table>\n  <thead>\n    <tr>\n      <th th:text=\"#{msgs.headers.name}\">Name</td>\n      <th th:text=\"#{msgs.headers.price}\">Price</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr th:each=\"prod : ${allProducts}\">\n      <td th:text=\"${prod.name}\">Oranges</td>\n      <td th:text=\"${#numbers.formatDecimal(prod.price,1,2)}\">0.99</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n# Thymeleaf的默认参数配置\n----\n\n如有需要修改默认配置的时候，只需复制下面要修改的属性到application.properties中，并修改成需要的值，如修改模板文件的扩展名，修改默认的模板路径等。\n```bash\n# Enable template caching.\nspring.thymeleaf.cache=true \n# Check that the templates location exists.\nspring.thymeleaf.check-template-location=true \n# Content-Type value.\nspring.thymeleaf.content-type=text/html \n# Enable MVC Thymeleaf view resolution.\nspring.thymeleaf.enabled=true \n# Template encoding.\nspring.thymeleaf.encoding=UTF-8 \n# Comma-separated list of view names that should be excluded from resolution.\nspring.thymeleaf.excluded-view-names= \n# Template mode to be applied to templates. See also StandardTemplateModeHandlers.\nspring.thymeleaf.mode=HTML5 \n# Prefix that gets prepended to view names when building a URL.\nspring.thymeleaf.prefix=classpath:/templates/ \n# Suffix that gets appended to view names when building a URL.\nspring.thymeleaf.suffix=.html\n# Order of the template resolver in the chain.\nspring.thymeleaf.template-resolver-order= \n# Comma-separated list of view names that can be resolved.\nspring.thymeleaf.view-names= \n```\n\n\n# Thymeleaf示例\n----\n```bash\n@Controller\npublic class HelloController {\n    @RequestMapping(\"/\")\n    public String index(ModelMap map) {\n        // 加入一个属性，用来在模板中读取\n        map.addAttribute(\"host\", \"http://blog.didispace.com\");\n        // return模板文件的名称，对应src/main/resources/templates/index.html\n        return \"index\";  \n    }\n}\n```\n\n```bash\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\" />\n    <title></title>\n</head>\n<body>\n<h1 th:text=\"${host}\">Hello World</h1>\n</body>\n</html>\n```\n\n# 整合Spring Security\n----\n\n## 核心概念\nPrinciple(User), Authority(Role)和Permission是Spring Security的3个核心概念。跟通常理解上Role和Permission之间一对多的关系不同，在Spring Security中，Authority和Permission是两个完全独立的概念，两者并没有必然的联系，但可以通过配置进行关联。\n\n## 添加依赖\n在pom.xml中添加如下配置，引入对Spring Security的依赖。\n```bash\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n```\n\n## Spring Security配置\n创建Spring Security的配置类WebSecurityConfig，具体如下：\n```java\n@Configuration\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n            .authorizeRequests()\n                .antMatchers(\"/\", \"/home\").permitAll()\n                .anyRequest().authenticated()\n                .and()\n            .formLogin()\n                .loginPage(\"/login\")\n                .permitAll()\n                .and()\n            .logout()\n                .permitAll();\n    }\n\n    /**\n    * Web层面的配置:一般用来配置无需安全检查的资源路径\n    */\n    @Override\n    public void configure(WebSecurity web) throws Exception {\n      web.ignoring().antMatchers(\"/js/**\", \"/css/**\", \"/images/**\");\n    }\n\n    /**\n    * 身份验证配置，用于注入自定义身份验证Bean和密码校验规则\n    */\n    /*@Override\n    public void configure(AuthenticationManagerBuilder auth) throws Exception {\n      auth.userDetailsService(detailsService).passwordEncoder(new BCryptPasswordEncoder());\n    }*/\n\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth\n            .inMemoryAuthentication()\n                .withUser(\"user\").password(\"password\").roles(\"USER\");\n    }\n}\n```\n- 通过@EnableWebSecurity注解开启Spring Security的功能\n- 继承WebSecurityConfigurerAdapter，并重写它的方法来设置一些web安全的细节\n- configure(HttpSecurity http)方法\n\t* 通过authorizeRequests()定义哪些URL需要被保护、哪些不需要被保护。例如以上代码指定了/和/home不需要任何认证就可以访问，其他的路径都必须通过身份验证。\n\t* 通过formLogin()定义当需要用户登录时候，转到的登录页面。\n- configureGlobal(AuthenticationManagerBuilder auth)方法，在内存中创建了一个用户，该用户的名称为user，密码为password，用户角色为USER。\n\n\n\n","source":"_posts/springsecurity.md","raw":"---\ntitle: Spring Boot笔记\ndate: 2017-07-20 10:00:00\ntags: [Spring Boot]\ncategories: Spring Boot\n---\n\n# 静态资源访问\n----\n\nSpring Boot默认提供静态资源目录位置需置于classpath下，目录名需符合如下规则：\n\n- /static\n- /public\n- /resources\n- /META-INF/resources\n\n举例：我们可以在src/main/resources/目录下创建static，在该位置放置一个图片文件。启动程序后，尝试访问http://localhost:8080/D.jpg\n\n\n# 模板引擎\n----\n\nSpring Boot提供了默认配置的模板引擎主要有以下几种：\n\n- Thymeleaf\n- FreeMarker\n- Velocity\n- Groovy\n- Mustache\n\n** 模板默认配置路径为：src/main/resources/templates **\n\n\n# Thymeleaf\n----\n\nThymeleaf是一个XML/XHTML/HTML5模板引擎，可用于Web与非Web环境中的应用开发。\n\nSpring Boot中使用Thymeleaf，只需要引入下面依赖，并在默认的模板路径src/main/resources/templates下编写模板文件即可完成。\n```bash\n<dependency>\n\t<groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\n</dependency>\n```\n\n\n示例模板：\n```bash\n<table>\n  <thead>\n    <tr>\n      <th th:text=\"#{msgs.headers.name}\">Name</td>\n      <th th:text=\"#{msgs.headers.price}\">Price</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr th:each=\"prod : ${allProducts}\">\n      <td th:text=\"${prod.name}\">Oranges</td>\n      <td th:text=\"${#numbers.formatDecimal(prod.price,1,2)}\">0.99</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n# Thymeleaf的默认参数配置\n----\n\n如有需要修改默认配置的时候，只需复制下面要修改的属性到application.properties中，并修改成需要的值，如修改模板文件的扩展名，修改默认的模板路径等。\n```bash\n# Enable template caching.\nspring.thymeleaf.cache=true \n# Check that the templates location exists.\nspring.thymeleaf.check-template-location=true \n# Content-Type value.\nspring.thymeleaf.content-type=text/html \n# Enable MVC Thymeleaf view resolution.\nspring.thymeleaf.enabled=true \n# Template encoding.\nspring.thymeleaf.encoding=UTF-8 \n# Comma-separated list of view names that should be excluded from resolution.\nspring.thymeleaf.excluded-view-names= \n# Template mode to be applied to templates. See also StandardTemplateModeHandlers.\nspring.thymeleaf.mode=HTML5 \n# Prefix that gets prepended to view names when building a URL.\nspring.thymeleaf.prefix=classpath:/templates/ \n# Suffix that gets appended to view names when building a URL.\nspring.thymeleaf.suffix=.html\n# Order of the template resolver in the chain.\nspring.thymeleaf.template-resolver-order= \n# Comma-separated list of view names that can be resolved.\nspring.thymeleaf.view-names= \n```\n\n\n# Thymeleaf示例\n----\n```bash\n@Controller\npublic class HelloController {\n    @RequestMapping(\"/\")\n    public String index(ModelMap map) {\n        // 加入一个属性，用来在模板中读取\n        map.addAttribute(\"host\", \"http://blog.didispace.com\");\n        // return模板文件的名称，对应src/main/resources/templates/index.html\n        return \"index\";  \n    }\n}\n```\n\n```bash\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"UTF-8\" />\n    <title></title>\n</head>\n<body>\n<h1 th:text=\"${host}\">Hello World</h1>\n</body>\n</html>\n```\n\n# 整合Spring Security\n----\n\n## 核心概念\nPrinciple(User), Authority(Role)和Permission是Spring Security的3个核心概念。跟通常理解上Role和Permission之间一对多的关系不同，在Spring Security中，Authority和Permission是两个完全独立的概念，两者并没有必然的联系，但可以通过配置进行关联。\n\n## 添加依赖\n在pom.xml中添加如下配置，引入对Spring Security的依赖。\n```bash\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n```\n\n## Spring Security配置\n创建Spring Security的配置类WebSecurityConfig，具体如下：\n```java\n@Configuration\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n            .authorizeRequests()\n                .antMatchers(\"/\", \"/home\").permitAll()\n                .anyRequest().authenticated()\n                .and()\n            .formLogin()\n                .loginPage(\"/login\")\n                .permitAll()\n                .and()\n            .logout()\n                .permitAll();\n    }\n\n    /**\n    * Web层面的配置:一般用来配置无需安全检查的资源路径\n    */\n    @Override\n    public void configure(WebSecurity web) throws Exception {\n      web.ignoring().antMatchers(\"/js/**\", \"/css/**\", \"/images/**\");\n    }\n\n    /**\n    * 身份验证配置，用于注入自定义身份验证Bean和密码校验规则\n    */\n    /*@Override\n    public void configure(AuthenticationManagerBuilder auth) throws Exception {\n      auth.userDetailsService(detailsService).passwordEncoder(new BCryptPasswordEncoder());\n    }*/\n\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth\n            .inMemoryAuthentication()\n                .withUser(\"user\").password(\"password\").roles(\"USER\");\n    }\n}\n```\n- 通过@EnableWebSecurity注解开启Spring Security的功能\n- 继承WebSecurityConfigurerAdapter，并重写它的方法来设置一些web安全的细节\n- configure(HttpSecurity http)方法\n\t* 通过authorizeRequests()定义哪些URL需要被保护、哪些不需要被保护。例如以上代码指定了/和/home不需要任何认证就可以访问，其他的路径都必须通过身份验证。\n\t* 通过formLogin()定义当需要用户登录时候，转到的登录页面。\n- configureGlobal(AuthenticationManagerBuilder auth)方法，在内存中创建了一个用户，该用户的名称为user，密码为password，用户角色为USER。\n\n\n\n","slug":"springsecurity","published":1,"updated":"2020-09-03T09:05:00.605Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckemmc5j7000k80v9loypqggh","content":"<h1 id=\"静态资源访问\"><a href=\"#静态资源访问\" class=\"headerlink\" title=\"静态资源访问\"></a>静态资源访问</h1><hr>\n<p>Spring Boot默认提供静态资源目录位置需置于classpath下，目录名需符合如下规则：</p>\n<ul>\n<li>/static</li>\n<li>/public</li>\n<li>/resources</li>\n<li>/META-INF/resources</li>\n</ul>\n<p>举例：我们可以在src/main/resources/目录下创建static，在该位置放置一个图片文件。启动程序后，尝试访问<a href=\"http://localhost:8080/D.jpg\" target=\"_blank\" rel=\"external\">http://localhost:8080/D.jpg</a></p>\n<h1 id=\"模板引擎\"><a href=\"#模板引擎\" class=\"headerlink\" title=\"模板引擎\"></a>模板引擎</h1><hr>\n<p>Spring Boot提供了默认配置的模板引擎主要有以下几种：</p>\n<ul>\n<li>Thymeleaf</li>\n<li>FreeMarker</li>\n<li>Velocity</li>\n<li>Groovy</li>\n<li>Mustache</li>\n</ul>\n<p><strong> 模板默认配置路径为：src/main/resources/templates </strong></p>\n<h1 id=\"Thymeleaf\"><a href=\"#Thymeleaf\" class=\"headerlink\" title=\"Thymeleaf\"></a>Thymeleaf</h1><hr>\n<p>Thymeleaf是一个XML/XHTML/HTML5模板引擎，可用于Web与非Web环境中的应用开发。</p>\n<p>Spring Boot中使用Thymeleaf，只需要引入下面依赖，并在默认的模板路径src/main/resources/templates下编写模板文件即可完成。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">\t&lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>\n<p>示例模板：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;table&gt;</div><div class=\"line\">  &lt;thead&gt;</div><div class=\"line\">    &lt;tr&gt;</div><div class=\"line\">      &lt;th th:text=<span class=\"string\">\"#&#123;msgs.headers.name&#125;\"</span>&gt;Name&lt;/td&gt;</div><div class=\"line\">      &lt;th th:text=<span class=\"string\">\"#&#123;msgs.headers.price&#125;\"</span>&gt;Price&lt;/td&gt;</div><div class=\"line\">    &lt;/tr&gt;</div><div class=\"line\">  &lt;/thead&gt;</div><div class=\"line\">  &lt;tbody&gt;</div><div class=\"line\">    &lt;tr th:each=<span class=\"string\">\"prod : <span class=\"variable\">$&#123;allProducts&#125;</span>\"</span>&gt;</div><div class=\"line\">      &lt;td th:text=<span class=\"string\">\"<span class=\"variable\">$&#123;prod.name&#125;</span>\"</span>&gt;Oranges&lt;/td&gt;</div><div class=\"line\">      &lt;td th:text=<span class=\"string\">\"<span class=\"variable\">$&#123;#numbers.formatDecimal(prod.price,1,2)&#125;</span>\"</span>&gt;0.99&lt;/td&gt;</div><div class=\"line\">    &lt;/tr&gt;</div><div class=\"line\">  &lt;/tbody&gt;</div><div class=\"line\">&lt;/table&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"Thymeleaf的默认参数配置\"><a href=\"#Thymeleaf的默认参数配置\" class=\"headerlink\" title=\"Thymeleaf的默认参数配置\"></a>Thymeleaf的默认参数配置</h1><hr>\n<p>如有需要修改默认配置的时候，只需复制下面要修改的属性到application.properties中，并修改成需要的值，如修改模板文件的扩展名，修改默认的模板路径等。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Enable template caching.</span></div><div class=\"line\">spring.thymeleaf.cache=<span class=\"literal\">true</span> </div><div class=\"line\"><span class=\"comment\"># Check that the templates location exists.</span></div><div class=\"line\">spring.thymeleaf.check-template-location=<span class=\"literal\">true</span> </div><div class=\"line\"><span class=\"comment\"># Content-Type value.</span></div><div class=\"line\">spring.thymeleaf.content-type=text/html </div><div class=\"line\"><span class=\"comment\"># Enable MVC Thymeleaf view resolution.</span></div><div class=\"line\">spring.thymeleaf.enabled=<span class=\"literal\">true</span> </div><div class=\"line\"><span class=\"comment\"># Template encoding.</span></div><div class=\"line\">spring.thymeleaf.encoding=UTF-8 </div><div class=\"line\"><span class=\"comment\"># Comma-separated list of view names that should be excluded from resolution.</span></div><div class=\"line\">spring.thymeleaf.excluded-view-names= </div><div class=\"line\"><span class=\"comment\"># Template mode to be applied to templates. See also StandardTemplateModeHandlers.</span></div><div class=\"line\">spring.thymeleaf.mode=HTML5 </div><div class=\"line\"><span class=\"comment\"># Prefix that gets prepended to view names when building a URL.</span></div><div class=\"line\">spring.thymeleaf.prefix=classpath:/templates/ </div><div class=\"line\"><span class=\"comment\"># Suffix that gets appended to view names when building a URL.</span></div><div class=\"line\">spring.thymeleaf.suffix=.html</div><div class=\"line\"><span class=\"comment\"># Order of the template resolver in the chain.</span></div><div class=\"line\">spring.thymeleaf.template-resolver-order= </div><div class=\"line\"><span class=\"comment\"># Comma-separated list of view names that can be resolved.</span></div><div class=\"line\">spring.thymeleaf.view-names=</div></pre></td></tr></table></figure></p>\n<h1 id=\"Thymeleaf示例\"><a href=\"#Thymeleaf示例\" class=\"headerlink\" title=\"Thymeleaf示例\"></a>Thymeleaf示例</h1><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Controller</div><div class=\"line\">public class HelloController &#123;</div><div class=\"line\">    @RequestMapping(<span class=\"string\">\"/\"</span>)</div><div class=\"line\">    public String index(ModelMap map) &#123;</div><div class=\"line\">        // 加入一个属性，用来在模板中读取</div><div class=\"line\">        map.addAttribute(<span class=\"string\">\"host\"</span>, <span class=\"string\">\"http://blog.didispace.com\"</span>);</div><div class=\"line\">        // <span class=\"built_in\">return</span>模板文件的名称，对应src/main/resources/templates/index.html</div><div class=\"line\">        <span class=\"built_in\">return</span> <span class=\"string\">\"index\"</span>;  </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head lang=<span class=\"string\">\"en\"</span>&gt;</div><div class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span> /&gt;</div><div class=\"line\">    &lt;title&gt;&lt;/title&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;h1 th:text=<span class=\"string\">\"<span class=\"variable\">$&#123;host&#125;</span>\"</span>&gt;Hello World&lt;/h1&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"整合Spring-Security\"><a href=\"#整合Spring-Security\" class=\"headerlink\" title=\"整合Spring Security\"></a>整合Spring Security</h1><hr>\n<h2 id=\"核心概念\"><a href=\"#核心概念\" class=\"headerlink\" title=\"核心概念\"></a>核心概念</h2><p>Principle(User), Authority(Role)和Permission是Spring Security的3个核心概念。跟通常理解上Role和Permission之间一对多的关系不同，在Spring Security中，Authority和Permission是两个完全独立的概念，两者并没有必然的联系，但可以通过配置进行关联。</p>\n<h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2><p>在pom.xml中添加如下配置，引入对Spring Security的依赖。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Spring-Security配置\"><a href=\"#Spring-Security配置\" class=\"headerlink\" title=\"Spring Security配置\"></a>Spring Security配置</h2><p>创建Spring Security的配置类WebSecurityConfig，具体如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Configuration</span></div><div class=\"line\"><span class=\"meta\">@EnableWebSecurity</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebSecurityConfig</span> <span class=\"keyword\">extends</span> <span class=\"title\">WebSecurityConfigurerAdapter</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        http</div><div class=\"line\">            .authorizeRequests()</div><div class=\"line\">                .antMatchers(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"/home\"</span>).permitAll()</div><div class=\"line\">                .anyRequest().authenticated()</div><div class=\"line\">                .and()</div><div class=\"line\">            .formLogin()</div><div class=\"line\">                .loginPage(<span class=\"string\">\"/login\"</span>)</div><div class=\"line\">                .permitAll()</div><div class=\"line\">                .and()</div><div class=\"line\">            .logout()</div><div class=\"line\">                .permitAll();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">    * Web层面的配置:一般用来配置无需安全检查的资源路径</div><div class=\"line\">    */</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(WebSecurity web)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">      web.ignoring().antMatchers(<span class=\"string\">\"/js/**\"</span>, <span class=\"string\">\"/css/**\"</span>, <span class=\"string\">\"/images/**\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">    * 身份验证配置，用于注入自定义身份验证Bean和密码校验规则</div><div class=\"line\">    */</div><div class=\"line\">    <span class=\"comment\">/*@Override</span></div><div class=\"line\">    public void configure(AuthenticationManagerBuilder auth) throws Exception &#123;</div><div class=\"line\">      auth.userDetailsService(detailsService).passwordEncoder(new BCryptPasswordEncoder());</div><div class=\"line\">    &#125;*/</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">configureGlobal</span><span class=\"params\">(AuthenticationManagerBuilder auth)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        auth</div><div class=\"line\">            .inMemoryAuthentication()</div><div class=\"line\">                .withUser(<span class=\"string\">\"user\"</span>).password(<span class=\"string\">\"password\"</span>).roles(<span class=\"string\">\"USER\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<ul>\n<li>通过@EnableWebSecurity注解开启Spring Security的功能</li>\n<li>继承WebSecurityConfigurerAdapter，并重写它的方法来设置一些web安全的细节</li>\n<li>configure(HttpSecurity http)方法<ul>\n<li>通过authorizeRequests()定义哪些URL需要被保护、哪些不需要被保护。例如以上代码指定了/和/home不需要任何认证就可以访问，其他的路径都必须通过身份验证。</li>\n<li>通过formLogin()定义当需要用户登录时候，转到的登录页面。</li>\n</ul>\n</li>\n<li>configureGlobal(AuthenticationManagerBuilder auth)方法，在内存中创建了一个用户，该用户的名称为user，密码为password，用户角色为USER。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"静态资源访问\"><a href=\"#静态资源访问\" class=\"headerlink\" title=\"静态资源访问\"></a>静态资源访问</h1><hr>\n<p>Spring Boot默认提供静态资源目录位置需置于classpath下，目录名需符合如下规则：</p>\n<ul>\n<li>/static</li>\n<li>/public</li>\n<li>/resources</li>\n<li>/META-INF/resources</li>\n</ul>\n<p>举例：我们可以在src/main/resources/目录下创建static，在该位置放置一个图片文件。启动程序后，尝试访问<a href=\"http://localhost:8080/D.jpg\" target=\"_blank\" rel=\"external\">http://localhost:8080/D.jpg</a></p>\n<h1 id=\"模板引擎\"><a href=\"#模板引擎\" class=\"headerlink\" title=\"模板引擎\"></a>模板引擎</h1><hr>\n<p>Spring Boot提供了默认配置的模板引擎主要有以下几种：</p>\n<ul>\n<li>Thymeleaf</li>\n<li>FreeMarker</li>\n<li>Velocity</li>\n<li>Groovy</li>\n<li>Mustache</li>\n</ul>\n<p><strong> 模板默认配置路径为：src/main/resources/templates </strong></p>\n<h1 id=\"Thymeleaf\"><a href=\"#Thymeleaf\" class=\"headerlink\" title=\"Thymeleaf\"></a>Thymeleaf</h1><hr>\n<p>Thymeleaf是一个XML/XHTML/HTML5模板引擎，可用于Web与非Web环境中的应用开发。</p>\n<p>Spring Boot中使用Thymeleaf，只需要引入下面依赖，并在默认的模板路径src/main/resources/templates下编写模板文件即可完成。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">\t&lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>\n<p>示例模板：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;table&gt;</div><div class=\"line\">  &lt;thead&gt;</div><div class=\"line\">    &lt;tr&gt;</div><div class=\"line\">      &lt;th th:text=<span class=\"string\">\"#&#123;msgs.headers.name&#125;\"</span>&gt;Name&lt;/td&gt;</div><div class=\"line\">      &lt;th th:text=<span class=\"string\">\"#&#123;msgs.headers.price&#125;\"</span>&gt;Price&lt;/td&gt;</div><div class=\"line\">    &lt;/tr&gt;</div><div class=\"line\">  &lt;/thead&gt;</div><div class=\"line\">  &lt;tbody&gt;</div><div class=\"line\">    &lt;tr th:each=<span class=\"string\">\"prod : <span class=\"variable\">$&#123;allProducts&#125;</span>\"</span>&gt;</div><div class=\"line\">      &lt;td th:text=<span class=\"string\">\"<span class=\"variable\">$&#123;prod.name&#125;</span>\"</span>&gt;Oranges&lt;/td&gt;</div><div class=\"line\">      &lt;td th:text=<span class=\"string\">\"<span class=\"variable\">$&#123;#numbers.formatDecimal(prod.price,1,2)&#125;</span>\"</span>&gt;0.99&lt;/td&gt;</div><div class=\"line\">    &lt;/tr&gt;</div><div class=\"line\">  &lt;/tbody&gt;</div><div class=\"line\">&lt;/table&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"Thymeleaf的默认参数配置\"><a href=\"#Thymeleaf的默认参数配置\" class=\"headerlink\" title=\"Thymeleaf的默认参数配置\"></a>Thymeleaf的默认参数配置</h1><hr>\n<p>如有需要修改默认配置的时候，只需复制下面要修改的属性到application.properties中，并修改成需要的值，如修改模板文件的扩展名，修改默认的模板路径等。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Enable template caching.</span></div><div class=\"line\">spring.thymeleaf.cache=<span class=\"literal\">true</span> </div><div class=\"line\"><span class=\"comment\"># Check that the templates location exists.</span></div><div class=\"line\">spring.thymeleaf.check-template-location=<span class=\"literal\">true</span> </div><div class=\"line\"><span class=\"comment\"># Content-Type value.</span></div><div class=\"line\">spring.thymeleaf.content-type=text/html </div><div class=\"line\"><span class=\"comment\"># Enable MVC Thymeleaf view resolution.</span></div><div class=\"line\">spring.thymeleaf.enabled=<span class=\"literal\">true</span> </div><div class=\"line\"><span class=\"comment\"># Template encoding.</span></div><div class=\"line\">spring.thymeleaf.encoding=UTF-8 </div><div class=\"line\"><span class=\"comment\"># Comma-separated list of view names that should be excluded from resolution.</span></div><div class=\"line\">spring.thymeleaf.excluded-view-names= </div><div class=\"line\"><span class=\"comment\"># Template mode to be applied to templates. See also StandardTemplateModeHandlers.</span></div><div class=\"line\">spring.thymeleaf.mode=HTML5 </div><div class=\"line\"><span class=\"comment\"># Prefix that gets prepended to view names when building a URL.</span></div><div class=\"line\">spring.thymeleaf.prefix=classpath:/templates/ </div><div class=\"line\"><span class=\"comment\"># Suffix that gets appended to view names when building a URL.</span></div><div class=\"line\">spring.thymeleaf.suffix=.html</div><div class=\"line\"><span class=\"comment\"># Order of the template resolver in the chain.</span></div><div class=\"line\">spring.thymeleaf.template-resolver-order= </div><div class=\"line\"><span class=\"comment\"># Comma-separated list of view names that can be resolved.</span></div><div class=\"line\">spring.thymeleaf.view-names=</div></pre></td></tr></table></figure></p>\n<h1 id=\"Thymeleaf示例\"><a href=\"#Thymeleaf示例\" class=\"headerlink\" title=\"Thymeleaf示例\"></a>Thymeleaf示例</h1><hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Controller</div><div class=\"line\">public class HelloController &#123;</div><div class=\"line\">    @RequestMapping(<span class=\"string\">\"/\"</span>)</div><div class=\"line\">    public String index(ModelMap map) &#123;</div><div class=\"line\">        // 加入一个属性，用来在模板中读取</div><div class=\"line\">        map.addAttribute(<span class=\"string\">\"host\"</span>, <span class=\"string\">\"http://blog.didispace.com\"</span>);</div><div class=\"line\">        // <span class=\"built_in\">return</span>模板文件的名称，对应src/main/resources/templates/index.html</div><div class=\"line\">        <span class=\"built_in\">return</span> <span class=\"string\">\"index\"</span>;  </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head lang=<span class=\"string\">\"en\"</span>&gt;</div><div class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span> /&gt;</div><div class=\"line\">    &lt;title&gt;&lt;/title&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;h1 th:text=<span class=\"string\">\"<span class=\"variable\">$&#123;host&#125;</span>\"</span>&gt;Hello World&lt;/h1&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"整合Spring-Security\"><a href=\"#整合Spring-Security\" class=\"headerlink\" title=\"整合Spring Security\"></a>整合Spring Security</h1><hr>\n<h2 id=\"核心概念\"><a href=\"#核心概念\" class=\"headerlink\" title=\"核心概念\"></a>核心概念</h2><p>Principle(User), Authority(Role)和Permission是Spring Security的3个核心概念。跟通常理解上Role和Permission之间一对多的关系不同，在Spring Security中，Authority和Permission是两个完全独立的概念，两者并没有必然的联系，但可以通过配置进行关联。</p>\n<h2 id=\"添加依赖\"><a href=\"#添加依赖\" class=\"headerlink\" title=\"添加依赖\"></a>添加依赖</h2><p>在pom.xml中添加如下配置，引入对Spring Security的依赖。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Spring-Security配置\"><a href=\"#Spring-Security配置\" class=\"headerlink\" title=\"Spring Security配置\"></a>Spring Security配置</h2><p>创建Spring Security的配置类WebSecurityConfig，具体如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Configuration</span></div><div class=\"line\"><span class=\"meta\">@EnableWebSecurity</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebSecurityConfig</span> <span class=\"keyword\">extends</span> <span class=\"title\">WebSecurityConfigurerAdapter</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        http</div><div class=\"line\">            .authorizeRequests()</div><div class=\"line\">                .antMatchers(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"/home\"</span>).permitAll()</div><div class=\"line\">                .anyRequest().authenticated()</div><div class=\"line\">                .and()</div><div class=\"line\">            .formLogin()</div><div class=\"line\">                .loginPage(<span class=\"string\">\"/login\"</span>)</div><div class=\"line\">                .permitAll()</div><div class=\"line\">                .and()</div><div class=\"line\">            .logout()</div><div class=\"line\">                .permitAll();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">    * Web层面的配置:一般用来配置无需安全检查的资源路径</div><div class=\"line\">    */</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">configure</span><span class=\"params\">(WebSecurity web)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">      web.ignoring().antMatchers(<span class=\"string\">\"/js/**\"</span>, <span class=\"string\">\"/css/**\"</span>, <span class=\"string\">\"/images/**\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">    * 身份验证配置，用于注入自定义身份验证Bean和密码校验规则</div><div class=\"line\">    */</div><div class=\"line\">    <span class=\"comment\">/*@Override</span></div><div class=\"line\">    public void configure(AuthenticationManagerBuilder auth) throws Exception &#123;</div><div class=\"line\">      auth.userDetailsService(detailsService).passwordEncoder(new BCryptPasswordEncoder());</div><div class=\"line\">    &#125;*/</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Autowired</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">configureGlobal</span><span class=\"params\">(AuthenticationManagerBuilder auth)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        auth</div><div class=\"line\">            .inMemoryAuthentication()</div><div class=\"line\">                .withUser(<span class=\"string\">\"user\"</span>).password(<span class=\"string\">\"password\"</span>).roles(<span class=\"string\">\"USER\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<ul>\n<li>通过@EnableWebSecurity注解开启Spring Security的功能</li>\n<li>继承WebSecurityConfigurerAdapter，并重写它的方法来设置一些web安全的细节</li>\n<li>configure(HttpSecurity http)方法<ul>\n<li>通过authorizeRequests()定义哪些URL需要被保护、哪些不需要被保护。例如以上代码指定了/和/home不需要任何认证就可以访问，其他的路径都必须通过身份验证。</li>\n<li>通过formLogin()定义当需要用户登录时候，转到的登录页面。</li>\n</ul>\n</li>\n<li>configureGlobal(AuthenticationManagerBuilder auth)方法，在内存中创建了一个用户，该用户的名称为user，密码为password，用户角色为USER。</li>\n</ul>\n"},{"title":"React Hook","date":"2020-09-03T09:00:00.000Z","_content":"\n# 简介\n----\n\nHook 的英文释义，是 钩子。\n\n\n\n\n","source":"_posts/react.md","raw":"---\ntitle: React Hook\ndate: 2020-09-03 17:00:00\ntags: [React]\ncategories: React\n---\n\n# 简介\n----\n\nHook 的英文释义，是 钩子。\n\n\n\n\n","slug":"react","published":1,"updated":"2020-09-03T09:46:49.668Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckemmlj9i00000cv9066usk2b","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><hr>\n<p>Hook 的英文释义，是 钩子。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><hr>\n<p>Hook 的英文释义，是 钩子。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckemmc5ez000180v97nzs6jg8","category_id":"ckemmc5f5000380v9sn3vvy8w","_id":"ckemmc5fc000880v9quib8i61"},{"post_id":"ckemmc5f3000280v9v6iqvj6o","category_id":"ckemmc5fa000680v98tgv4kk5","_id":"ckemmc5fe000b80v9rlsv3825"},{"post_id":"ckemmc5f8000580v9w1rx8jy6","category_id":"ckemmc5fc000980v9xtjw3d8z","_id":"ckemmc5ff000e80v9rtw1o538"},{"post_id":"ckemmc5j7000k80v9loypqggh","category_id":"ckemmc5fc000980v9xtjw3d8z","_id":"ckemmc5je000p80v9ema01cmf"},{"post_id":"ckemmlj9i00000cv9066usk2b","category_id":"ckemmlj9t00010cv980vvmh6i","_id":"ckemmlj9z00040cv9esp5tg9r"}],"PostTag":[{"post_id":"ckemmc5ez000180v97nzs6jg8","tag_id":"ckemmc5f7000480v9pivck613","_id":"ckemmc5ff000d80v9atozp4xc"},{"post_id":"ckemmc5ez000180v97nzs6jg8","tag_id":"ckemmc5fb000780v96iplgbsp","_id":"ckemmc5fg000f80v9o3mu5u9d"},{"post_id":"ckemmc5ez000180v97nzs6jg8","tag_id":"ckemmc5fd000a80v9feh00u5o","_id":"ckemmc5fh000h80v9s74s21ur"},{"post_id":"ckemmc5f3000280v9v6iqvj6o","tag_id":"ckemmc5fe000c80v9xbfi7uxo","_id":"ckemmc5fh000i80v9to7dqlba"},{"post_id":"ckemmc5f8000580v9w1rx8jy6","tag_id":"ckemmc5fg000g80v9gh32u0hs","_id":"ckemmc5fi000j80v9w26z3dfv"},{"post_id":"ckemmc5j7000k80v9loypqggh","tag_id":"ckemmc5fg000g80v9gh32u0hs","_id":"ckemmc5jc000n80v9bkdl9w2y"},{"post_id":"ckemmlj9i00000cv9066usk2b","tag_id":"ckemmlj9v00020cv9jv1nk7l4","_id":"ckemmlj9y00030cv9ez66vsh2"}],"Tag":[{"name":"npm","_id":"ckemmc5f7000480v9pivck613"},{"name":"hexo","_id":"ckemmc5fb000780v96iplgbsp"},{"name":"github","_id":"ckemmc5fd000a80v9feh00u5o"},{"name":"nodeppt","_id":"ckemmc5fe000c80v9xbfi7uxo"},{"name":"Spring Boot","_id":"ckemmc5fg000g80v9gh32u0hs"},{"name":"React","_id":"ckemmlj9v00020cv9jv1nk7l4"}]}}